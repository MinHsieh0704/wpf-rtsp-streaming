<Window x:Class="wpf_rtsp_streaming.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:wpf_rtsp_streaming"
        xmlns:components="clr-namespace:wpf_rtsp_streaming.Components"
        xmlns:convert="clr-namespace:wpf_rtsp_streaming.Converts"
        xmlns:dc="clr-namespace:wpf_rtsp_streaming.DataCenter"
        mc:Ignorable="d"
        ResizeMode="CanMinimize"
        Width="800" Height="450">

    <Window.Resources>
        <dc:DataCenter x:Key="DataCenter"/>
        <convert:ReverseBooleanConverter x:Key="ReverseBooleanConverter"/>

        <Style TargetType="Grid" x:Key="Container">
            <Setter Property="Margin" Value="10,10,10,10"/>
        </Style>

        <Style TargetType="components:Loading" x:Key="Loading">
            <Setter Property="Visibility" Value="Hidden"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsShowLoading, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Label" x:Key="LabelVersion">
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Foreground" Value="#e3e3e3"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
        </Style>

        <Style TargetType="Button" x:Key="ButtonStart">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="ButtonBorder">
                            <Border.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="Padding" Value="4,0"/>
                                    <Setter Property="Background" Value="#ffffff"/>
                                    <Setter Property="BorderBrush" Value="#006ab7"/>
                                    <Setter Property="BorderThickness" Value="2"/>
                                    <Setter Property="CornerRadius" Value="4"/>
                                    <Setter Property="VerticalAlignment" Value="Top"/>
                                    <Setter Property="HorizontalAlignment" Value="Left"/>
                                </Style>
                            </Border.Resources>

                            <Label x:Name="ButtonLabel">
                                <Label.Resources>
                                    <Style TargetType="Label">
                                        <Setter Property="Content" Value="Start"/>
                                        <Setter Property="Foreground" Value="#006ab7"/>
                                        <Setter Property="FontWeight" Value="Bold"/>
                                        <Setter Property="FontSize" Value="13"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                    </Style>
                                </Label.Resources>
                            </Label>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="#003b65"/>
                                <Setter Property="Foreground" TargetName="ButtonLabel" Value="#003b65"/>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="ButtonBorder" Value="#cecece"/>
                                <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="#cecece"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="ButtonStop">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="ButtonBorder">
                            <Border.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="Padding" Value="4,0"/>
                                    <Setter Property="Background" Value="#ffffff"/>
                                    <Setter Property="BorderBrush" Value="#ca4940"/>
                                    <Setter Property="BorderThickness" Value="2"/>
                                    <Setter Property="CornerRadius" Value="4"/>
                                    <Setter Property="VerticalAlignment" Value="Top"/>
                                    <Setter Property="HorizontalAlignment" Value="Left"/>
                                </Style>
                            </Border.Resources>

                            <Label x:Name="ButtonLabel">
                                <Label.Resources>
                                    <Style TargetType="Label">
                                        <Setter Property="Content" Value="Stop"/>
                                        <Setter Property="Foreground" Value="#ca4940"/>
                                        <Setter Property="FontWeight" Value="Bold"/>
                                        <Setter Property="FontSize" Value="13"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                    </Style>
                                </Label.Resources>
                            </Label>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="#86251e"/>
                                <Setter Property="Foreground" TargetName="ButtonLabel" Value="#86251e"/>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="ButtonBorder" Value="#cecece"/>
                                <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="#cecece"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="ButtonAddStreaming">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="ButtonBorder">
                            <Border.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="Padding" Value="4,0"/>
                                    <Setter Property="Background" Value="#ffffff"/>
                                    <Setter Property="BorderBrush" Value="#35cda8"/>
                                    <Setter Property="BorderThickness" Value="2"/>
                                    <Setter Property="CornerRadius" Value="4"/>
                                    <Setter Property="VerticalAlignment" Value="Top"/>
                                    <Setter Property="HorizontalAlignment" Value="Left"/>
                                </Style>
                            </Border.Resources>

                            <Label x:Name="ButtonLabel">
                                <Label.Resources>
                                    <Style TargetType="Label">
                                        <Setter Property="Content" Value="Add Streaming"/>
                                        <Setter Property="Foreground" Value="#35cda8"/>
                                        <Setter Property="FontWeight" Value="Bold"/>
                                        <Setter Property="FontSize" Value="13"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                    </Style>
                                </Label.Resources>
                            </Label>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="#14896d"/>
                                <Setter Property="Foreground" TargetName="ButtonLabel" Value="#14896d"/>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="ButtonBorder" Value="#cecece"/>
                                <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="#cecece"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ListViewItem" x:Key="ListViewItemSource">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Focusable" Value="False"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="#003b65"/>
                    <Setter Property="BorderThickness" Value="1"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="ListView" x:Key="ListViewSource">
            <Setter Property="Height" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ItemContainerStyle" Value="{StaticResource ListViewItemSource}"/>
            <Setter Property="IsTabStop" Value="False"/>
        </Style>
    </Window.Resources>

    <Grid Style="{StaticResource Container}">
        <components:Loading>
            <components:Loading.Resources>
                <Style TargetType="components:Loading" BasedOn="{StaticResource Loading}">
                </Style>
            </components:Loading.Resources>
        </components:Loading>
        
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Canvas>
                <Canvas.Resources>
                    <Style TargetType="Canvas">
                        <Setter Property="Grid.Row" Value="0"/>
                    </Style>
                </Canvas.Resources>

                <Button Click="ButtonStart_Click">
                    <Button.Resources>
                        <Style TargetType="Button" BasedOn="{StaticResource ButtonStart}">
                            <Setter Property="Canvas.Left" Value="0"/>
                            <Setter Property="IsEnabled" Value="{Binding Path=IsStart, Converter={StaticResource ReverseBooleanConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"/>
                        </Style>
                    </Button.Resources>
                </Button>

                <Button Click="ButtonStop_Click">
                    <Button.Resources>
                        <Style TargetType="Button" BasedOn="{StaticResource ButtonStop}">
                            <Setter Property="Canvas.Left" Value="65"/>
                            <Setter Property="IsEnabled" Value="{Binding Path=IsStart, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"/>
                        </Style>
                    </Button.Resources>
                </Button>

                <Button Click="ButtonAddStreaming_Click">
                    <Button.Resources>
                        <Style TargetType="Button" BasedOn="{StaticResource ButtonAddStreaming}">
                            <Setter Property="Canvas.Right" Value="0"/>
                        </Style>
                    </Button.Resources>
                </Button>
            </Canvas>

            <ListView>
                <ListView.Resources>
                    <Style TargetType="ListView" BasedOn="{StaticResource ListViewSource}">
                        <Setter Property="Grid.Row" Value="1"/>
                        <Setter Property="Margin" Value="0,0,0,27"/>
                        <!--<Setter Property="ItemsSource" Value="{Binding Path=ModelInfo.Tags, Source={StaticResource DataCenter}}"/>-->
                    </Style>
                </ListView.Resources>

                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="No." Width="45">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox>
                                        <TextBox.Resources>
                                            <!--<Style TargetType="TextBox" BasedOn="{StaticResource TextBoxItemTag}">
                                                <Setter Property="Text" Value="{Binding ID}"/>
                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                            </Style>-->
                                        </TextBox.Resources>
                                    </TextBox>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <GridViewColumn Header="File" Width="290">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox>
                                        <TextBox.Resources>
                                            <!--<Style TargetType="TextBox" BasedOn="{StaticResource TextBoxItemTag}">
                                                <Setter Property="Text" Value="{Binding Name}"/>
                                                <Setter Property="TextWrapping" Value="Wrap"/>
                                            </Style>-->
                                        </TextBox.Resources>
                                    </TextBox>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <GridViewColumn Header="URL" Width="280">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox>
                                        <TextBox.Resources>
                                            <!--<Style TargetType="TextBox" BasedOn="{StaticResource TextBoxItemTag}">
                                                <Setter Property="Text" Value="{Binding Name}"/>
                                                <Setter Property="TextWrapping" Value="Wrap"/>
                                            </Style>-->
                                        </TextBox.Resources>
                                    </TextBox>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <GridViewColumn Header="Action" Width="150">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox>
                                        <TextBox.Resources>
                                            <!--<Style TargetType="TextBox" BasedOn="{StaticResource TextBoxItemTag}">
                                                <Setter Property="Text" Value="{Binding Name}"/>
                                                <Setter Property="TextWrapping" Value="Wrap"/>
                                            </Style>-->
                                        </TextBox.Resources>
                                    </TextBox>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
        </Grid>

        <Label>
            <Label.Resources>
                <Style TargetType="Label" BasedOn="{StaticResource LabelVersion}">
                    <Setter Property="Content" Value="{Binding Path=AppVersion, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"/>
                </Style>
            </Label.Resources>
        </Label>
    </Grid>
</Window>
